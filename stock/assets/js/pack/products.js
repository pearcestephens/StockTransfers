// Product search / add functionality mixin
export const ProductsMixin = Base => class extends Base {
  openAddProductModal(){ if(this.modules.lockSystem && !this.modules.lockSystem.lockStatus?.has_lock){ this.showToast?.('You need lock access to add products','warning'); return; } const modal=document.getElementById('addProdModal'); if(modal){ $(modal).modal('show'); $(modal).on('shown.bs.modal',()=>{ const si=document.getElementById('productSearchInput'); si?.focus(); }); } }
  handleProductSearch(q){ if(q.length<2){ this.clearProductSearchResults(); return; } if(this.productSearchTimer) clearTimeout(this.productSearchTimer); this.productSearchTimer=setTimeout(()=>this.performProductSearch(q),300); }
  async performProductSearch(q){ const c=document.getElementById('productSearchResults'); if(!c) return; c.innerHTML='<div class="text-center text-muted py-4"><i class="fa fa-spinner fa-spin fa-2x mb-2"></i><p>Searching products...</p></div>'; try{ const resp=await fetch('/modules/transfers/stock/api/search_products.php',{ method:'POST', headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest'}, credentials:'include', body:JSON.stringify({ query:q, transfer_id:this.config.transferId })}); const data=await resp.json(); if(data.success && data.products) this.displayProductSearchResults(data.products); else c.innerHTML=`<div class='text-center text-muted py-4'><i class='fa fa-exclamation-triangle fa-2x mb-2'></i><p>No products found matching "${q}"</p></div>`; }catch(err){ console.error('Product search failed:',err); c.innerHTML='<div class="text-center text-danger py-4"><i class="fa fa-exclamation-triangle fa-2x mb-2"></i><p>Search failed. Please try again.</p></div>'; } }
  displayProductSearchResults(products){ const c=document.getElementById('productSearchResults'); if(!c) return; if(products.length===0){ c.innerHTML='<div class="text-center text-muted py-4"><i class="fa fa-info-circle fa-2x mb-2"></i><p>No products found</p></div>'; return; } c.innerHTML=products.map(p=>`<div class='border-bottom p-3'><div class='d-flex align-items-center'><div class='mr-3'>${p.image_url?`<img src='${p.image_url}' class='rounded' style='width:50px;height:50px;object-fit:cover;'>`:`<div class='bg-light rounded d-flex align-items-center justify-content-center' style='width:50px;height:50px;'><i class='fa fa-image text-muted'></i></div>`}</div><div class='flex-grow-1'><h6 class='mb-1'>${p.name}</h6><small class='text-muted'>SKU: ${p.sku||'N/A'}</small>${p.brand?`<small class='text-muted'> â€¢ ${p.brand}</small>`:''}<div class='mt-1'><span class='badge badge-info'>Stock: ${p.stock_qty||0}</span>${p.price?`<span class='badge badge-secondary ml-1'>$${parseFloat(p.price).toFixed(2)}</span>`:''}</div></div><div><input type='number' class='form-control form-control-sm d-inline-block mr-2' style='width:80px;' value='1' min='1' max='${p.stock_qty||999}' id='qty-${p.id}'><button type='button' class='btn btn-primary btn-sm add-product-btn' data-product-id='${p.id}' data-product-name='${p.name}'><i class='fa fa-plus mr-1'></i>Add</button></div></div></div>`).join(''); }
  async addProductToTransfer(btn){ const productId=btn.dataset.productId; const productName=btn.dataset.productName; const qtyInput=document.getElementById(`qty-${productId}`); const quantity=parseInt(qtyInput?.value||1); if(!productId || quantity<1){ this.showToast?.('Invalid product or quantity','error'); return; } btn.disabled=true; btn.innerHTML='<i class="fa fa-spinner fa-spin mr-1"></i>Adding...'; try{ const resp=await fetch('/modules/transfers/stock/api/add_product.php',{ method:'POST', headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest'}, credentials:'include', body:JSON.stringify({ transfer_id:this.config.transferId, product_id:productId, quantity })}); const data=await resp.json(); if(data.success){ this.showToast?.(`Added ${quantity}x ${productName} to transfer`,'success'); $('#addProdModal').modal('hide'); setTimeout(()=>window.location.reload(),1000); } else { throw new Error(data.message||'Failed to add product'); } }catch(err){ console.error('Add product failed:',err); this.showToast?.(`Failed to add product: ${err.message}`,'error'); btn.disabled=false; btn.innerHTML='<i class="fa fa-plus mr-1"></i>Add'; } }
  clearProductSearch(){ const si=document.getElementById('productSearchInput'); if(si){ si.value=''; si.focus(); } this.clearProductSearchResults(); }
  clearProductSearchResults(){ const c=document.getElementById('productSearchResults'); if(c){ c.innerHTML='<div class="text-center text-muted py-4"><i class="fa fa-search fa-2x mb-2"></i><p>Start typing to search for products...</p></div>'; } }
};
