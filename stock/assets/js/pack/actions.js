// High-level pack actions mixin
export const ActionsMixin = Base => class extends Base {
  async completePack(){ const ls=this.getLockStatus?.(); if(!ls?.has_lock){ this.showToast?.('You need to have the transfer locked to complete packing','error'); return; } try{ const data=this.gatherFormData?.(); await this.saveData?.(data,{complete:true}); this.showToast?.('Pack completed successfully','success'); setTimeout(()=>{ window.location.href=`/modules/transfers/stock/pack.php?id=${this.config.transferId}&completed=1`; },2000); }catch(err){ console.error('Complete pack failed:',err); this.showToast?.('Failed to complete pack','error'); } }
  async generateLabels(){ try{ const resp=await fetch(`/modules/transfers/stock/api/generate_labels.php?transfer_id=${this.config.transferId}`); const data=await resp.json(); if(data.success){ this.showToast?.('Labels generated successfully','success'); if(data.print_url) window.open(data.print_url,'_blank'); } else { throw new Error(data.error||'Label generation failed'); } }catch(err){ console.error('Generate labels failed:',err); this.showToast?.('Failed to generate labels','error'); } }
  async saveProgress(){ try{ this.setAutoSaveStatus?.('saving'); const data=this.gatherFormData?.(); await this.saveData?.(data); this.setAutoSaveStatus?.('saved','manual'); this.showToast?.('Progress saved successfully','success'); this.debug('Manual save completed'); }catch(err){ this.setAutoSaveStatus?.('error'); console.error('Save progress failed:',err); this.showToast?.('Failed to save progress - '+(err.message||'Unknown error'),'error'); } }
};
