// Lock violation + overlay handling mixin
export const LockSafetyMixin = Base => class extends Base {
  isLockViolation(error){ if(!error) return false; return error.lock_violation===true || error?.error?.type==='LOCK_VIOLATION' || error?.error?.code?.includes?.('LOCK') || (error.status===423) || (typeof error==='string' && error.toLowerCase().includes('lock')); }
  handleLockViolation(error,context=''){ console.warn('ðŸ”’ Lock Violation Detected:',{error,context}); const details=error?.details||{}; const lockHolder=details?.locked_by_name||`User ${details?.locked_by_user_id||'Unknown'}`; let message; let actionText='Request Access'; switch(error?.error?.code){ case 'LOCK_REQUIRED': message='You need to acquire the transfer lock to make changes'; actionText='Get Lock'; break; case 'LOCK_DENIED': message=`This transfer is locked by ${lockHolder}`; actionText='Request Access'; break; default: message='Transfer access denied - lock ownership required'; actionText='Get Access'; }
    this.showToast?.(message,'error',{ duration:10000, action:{ label:actionText, onClick:()=>this.requestLockAccess?.() } }); this.updateUIForLockViolation(details); this.emit?.('lock:violation',{ error, context, details }); }
  updateUIForLockViolation(details){ const badge=document.querySelector('#lockStatusBadge'); if(badge){ badge.textContent='LOCKED'; badge.style.background='rgba(220,53,69,0.8)'; badge.style.borderColor='rgba(220,53,69,1)'; } this.showLockOverlay(details); }
  showLockOverlay(details){ const existing=document.querySelector('#lockViolationOverlay'); if(existing) existing.remove(); const overlay=document.createElement('div'); overlay.id='lockViolationOverlay'; overlay.className='alert alert-warning border-warning shadow-sm'; overlay.style.cssText='position:fixed;top:80px;right:20px;z-index:1050;max-width:350px;font-size:0.9rem;'; const lockHolder=details?.locked_by_name||'another user'; overlay.innerHTML=`<div class="d-flex align-items-start"><i class="fas fa-lock text-warning mr-2 mt-1"></i><div class="flex-grow-1"><strong>Transfer Locked</strong><br><small class="text-muted">Locked by ${lockHolder}. Changes are disabled.</small></div><button type="button" class="close ml-2" onclick="this.parentElement.parentElement.remove()"><span>&times;</span></button></div><div class="mt-2"><button type="button" class="btn btn-sm btn-outline-primary" onclick="window.packSystem?.requestLockAccess?.()"><i class="fas fa-key mr-1"></i>Request Access</button></div>`; document.body.appendChild(overlay); setTimeout(()=>{ if(overlay.parentElement) overlay.remove(); },30000); }
};
