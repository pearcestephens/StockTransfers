name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.1, 8.2]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_mysql, curl, mbstring, openssl
        coverage: xdebug
        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Copy environment file
      run: cp .env.example .env
      
    - name: Check code style (PSR-12)
      run: composer cs-check
      
    - name: Run static analysis
      run: composer analyse
      
    - name: Setup test database
      run: |
        sudo systemctl start mysql
        mysql -e 'CREATE DATABASE vape_shed_transfers_test;' -uroot -proot
        
    - name: Run tests
      run: composer test
      env:
        DB_DATABASE: vape_shed_transfers_test
        DB_USERNAME: root
        DB_PASSWORD: root
        
    - name: Generate coverage report
      run: composer test-coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Security check
      run: |
        composer require --dev enlightn/security-checker
        ./vendor/bin/security-checker security:check composer.lock
        
    - name: Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: PHP Lint
      run: find . -name "*.php" -not -path "./vendor/*" | xargs -I {} php -l {}
      
    - name: Check for syntax errors
      run: |
        ! find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \; | grep -v "No syntax errors"

  deploy-staging:
    needs: [test, security, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to staging
      run: echo "Deploy to staging server"
      # Add actual deployment steps here
      
  deploy-production:
    needs: [test, security, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: echo "Deploy to production server"
      # Add actual deployment steps here
      
    - name: Notify team
      run: echo "Notify team of production deployment"
      # Add notification logic here